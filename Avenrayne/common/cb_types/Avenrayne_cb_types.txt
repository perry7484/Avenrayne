## normal scopes(including posttitle scopes) ##
# ROOT = receiver
# FROM = giver
# <no scope change> = attacker or receiver
## title scopes ##
# ROOT = receiver
# FROM = giver
# <no scope change> = thirdparty landed title	
#
# the following effects/triggers exists (example execution order: on_success->on_success_title->on_success_posttitle):
# is_valid, is_valid_title, on_add, on_add_title, on_add_posttitle, on_success, on_success_title, on_success_posttitle, on_fail, on_fail_title, on_fail_posttitle, on_reverse_demand, on_reverse_demand_title, on_reverse_demand_posttitle
#
# Added on_attacker_leader_death, on_defender_leader_death and on_thirdparty_death, which all trigger when corresponding character dies
# These three all have war scopes, which currently has the following scope changes: 
# attacker, defender, thirdparty(only valid if thirdparty character is involved), thirdparty_title(only valid if thirdparty title is involved)
#
# ai_will_do: modifies value AI places on the CB compared to other CBs (default: 1) Note: is in title scope
# can_use_gui: If otherwise valid, the CB is listed in the Diplo View, but you can't declare war unless 'can_use_gui' is also valid (also shows a trigger tooltip.)
#

imperial_reconquest = {
	name = CB_NAME_IMPERIAL
	war_name = WAR_NAME_IMPERIAL
	sprite = 17
	truce_days = 3650
	is_permanent = yes
	check_de_jure_tier = DUKE # this scans all dejure duchies for the counties which are held by or vassals(or below) of selected character. Only valid if is_permanent = yes

	allowed_to_target_tributaries = no
	allowed_to_target_suzerains = no

	can_use = {
		ROOT = {
			has_landed_title = e_capraccia
			independent = yes
			NOT = { same_realm = FROM }
			mercenary = no
		}
	}

	can_use_title = {
		OR = {
			de_jure_liege_or_above = e_capraccia
			de_jure_liege_or_above = e_rayne
			de_jure_liege_or_above = e_middlefork
			de_jure_liege_or_above = e_nikosia
			de_jure_liege_or_above = e_varodia
			de_jure_liege_or_above = e_costa_do_sol
			de_jure_liege_or_above = e_lopera
			de_jure_liege_or_above = fornella
			de_jure_liege_or_above = e_maesmynis
			de_jure_liege_or_above = k_papal_state
			de_jure_liege_or_above = k_abernay
			de_jure_liege_or_above = k_medford
			de_jure_liege_or_above = k_glenrose
			de_jure_liege_or_above = k_wester_fork
			de_jure_liege_or_above = k_maesmynis
			de_jure_liege_or_above = k_minllyn
			de_jure_liege_or_above = e_siliania
			de_jure_liege_or_above = e_nawwara
			de_jure_liege_or_above = e_alaya
			de_jure_liege_or_above = e_merouana
			de_jure_liege_or_above = e_sonoria
			de_jure_liege_or_above = e_hieroz
			de_jure_liege_or_above = d_aren
			de_jure_liege_or_above = d_clarvalls
			de_jure_liege_or_above = d_celra
		}
	}
	
	is_valid = {
		ROOT = {
			independent = yes
			NOT = { same_realm = FROM }
		}
	}
	
	on_success = {
		any_attacker = {
			limit = { character = ROOT }
			participation_scaled_prestige = 100
		}
		any_attacker = {
			limit = { NOT = { character = ROOT } }
			hidden_tooltip = { 
				participation_scaled_prestige = 100
			}
		}
		
		FROM = { prestige = -100 }
	}

	on_success_title = {
		custom_tooltip = { 
			text = other_invasion_succ_tip
			hidden_tooltip = {
				ROOT = {
					vassalize_or_take_under_title = {
						title = PREV
						enemy = FROM
						type = invasion
					}
				}
			}
		}
		if = {
			limit = {
				holder_scope = { character = FROM }
			}
			usurp_title_only = { target = ROOT type = invasion }
		}
	}

	on_fail = {
		ROOT = { prestige = -150 }
	}

	on_reverse_demand = {
		ROOT = {
			transfer_scaled_wealth = {
				to = FROM
				value = 4.0
			}
			ROOT = { prestige = -200 }
		}
		any_defender = {
			limit = { character = FROM }
			participation_scaled_piety = 100
			participation_scaled_prestige = 200
			if = {
				limit = {
					uses_decadence = yes
				}
				participation_scaled_decadence = -10
			}
		}
		any_defender = {
			limit = { NOT = { character = FROM } }
			hidden_tooltip = { 
				participation_scaled_piety = 100
				participation_scaled_prestige = 200
				if = {
					limit = {
						uses_decadence = yes
					}
					participation_scaled_decadence = -10
				}
			}
		}
	}

	attacker_ai_victory_worth = {
		factor = -1 # always accept
	}
	
	attacker_ai_defeat_worth = {
		factor = 100
	}

	defender_ai_victory_worth = {
		factor = -1 # always accept
	}
	
	defender_ai_defeat_worth = {
		factor = 100
	}
}
